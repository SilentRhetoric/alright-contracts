{
    "hints": {
        "deal_value_method((byte,byte,address,uint64,uint64,uint64,uint64,address,uint64,uint64,uint64,uint64,uint64,uint64,byte,byte,string))void": {
            "structs": {
                "deal_value": {
                    "name": "DealValue",
                    "elements": [
                        [
                            "first_acc_status",
                            "byte"
                        ],
                        [
                            "second_acc_status",
                            "byte"
                        ],
                        [
                            "first_acc_address",
                            "address"
                        ],
                        [
                            "first_acc_dep_amount",
                            "uint64"
                        ],
                        [
                            "first_acc_dep_asset",
                            "uint64"
                        ],
                        [
                            "first_acc_col_amount",
                            "uint64"
                        ],
                        [
                            "first_acc_col_asset",
                            "uint64"
                        ],
                        [
                            "second_acc_address",
                            "address"
                        ],
                        [
                            "second_acc_dep_amount",
                            "uint64"
                        ],
                        [
                            "second_acc_dep_asset",
                            "uint64"
                        ],
                        [
                            "second_acc_col_amount",
                            "uint64"
                        ],
                        [
                            "second_acc_col_asset",
                            "uint64"
                        ],
                        [
                            "first_acc_forward_amount",
                            "uint64"
                        ],
                        [
                            "second_acc_forward_amount",
                            "uint64"
                        ],
                        [
                            "first_acc_data",
                            "byte"
                        ],
                        [
                            "second_acc_data",
                            "byte"
                        ],
                        [
                            "deal_note",
                            "string"
                        ]
                    ]
                }
            },
            "call_config": {
                "no_op": "CALL"
            }
        },
        "hello(string)string": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "change_status(string)string": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "change_owner(address)address": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "send_note(address,string)string": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_nfd(string,uint64)string": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "opt_in_to_asa(asset,pay)string": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "box_budget()void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "create_deal(txn,txn,uint64,uint64,uint64,uint64,uint64,account,uint64,uint64,uint64,uint64,uint64,string,txn)uint64": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "attach_data(byte[33],uint64,uint64,uint64,string)uint64": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "match_deal(txn,txn,byte[33],uint64,account,uint64)byte[2]": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "recall_deal(byte[33],uint64,account,uint64)string": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "reject_deal(byte[33],uint64,account,uint64)string": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "adjust_disbursement(byte[33],uint64,account,uint64,uint64,uint64)string": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "agree_disbursement(byte[33],uint64,account,uint64)string": {
            "call_config": {
                "no_op": "CALL"
            }
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDgKcHVzaGludCAwIC8vIDAKcmV0dXJu"
    },
    "state": {
        "global": {
            "num_byte_slices": 32,
            "num_uints": 32
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 0
        }
    },
    "schema": {
        "global": {
            "declared": {
                "active_deals": {
                    "type": "uint64",
                    "key": "active_deals",
                    "descr": "Active deals"
                },
                "completed_deals": {
                    "type": "uint64",
                    "key": "completed_deals",
                    "descr": "Completed deals"
                },
                "owner": {
                    "type": "bytes",
                    "key": "owner",
                    "descr": "Account that controls the app"
                },
                "status": {
                    "type": "bytes",
                    "key": "status",
                    "descr": "Application status"
                },
                "total_deals": {
                    "type": "uint64",
                    "key": "total_deals",
                    "descr": "Total deals"
                }
            },
            "reserved": {
                "reserved_global_bytes_value": {
                    "type": "bytes",
                    "max_keys": 30,
                    "descr": "Reserved global state bytes value with 30 possible keys"
                },
                "reserved_global_uint_value": {
                    "type": "uint64",
                    "max_keys": 29,
                    "descr": "Reserved global state uint value with 29 possible keys"
                }
            }
        },
        "local": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "AlrightApp",
        "methods": [
            {
                "name": "deal_value_method",
                "args": [
                    {
                        "type": "(byte,byte,address,uint64,uint64,uint64,uint64,address,uint64,uint64,uint64,uint64,uint64,uint64,byte,byte,string)",
                        "name": "deal_value"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "hello",
                "args": [
                    {
                        "type": "string",
                        "name": "name"
                    }
                ],
                "returns": {
                    "type": "string"
                }
            },
            {
                "name": "change_status",
                "args": [
                    {
                        "type": "string",
                        "name": "new_status"
                    }
                ],
                "returns": {
                    "type": "string"
                }
            },
            {
                "name": "change_owner",
                "args": [
                    {
                        "type": "address",
                        "name": "new_owner"
                    }
                ],
                "returns": {
                    "type": "address"
                }
            },
            {
                "name": "send_note",
                "args": [
                    {
                        "type": "address",
                        "name": "receiver"
                    },
                    {
                        "type": "string",
                        "name": "note"
                    }
                ],
                "returns": {
                    "type": "string"
                }
            },
            {
                "name": "verify_nfd",
                "args": [
                    {
                        "type": "string",
                        "name": "nfd_name"
                    },
                    {
                        "type": "uint64",
                        "name": "nfd_app_id"
                    }
                ],
                "returns": {
                    "type": "string"
                }
            },
            {
                "name": "opt_in_to_asa",
                "args": [
                    {
                        "type": "asset",
                        "name": "asset"
                    },
                    {
                        "type": "pay",
                        "name": "payment"
                    }
                ],
                "returns": {
                    "type": "string"
                }
            },
            {
                "name": "box_budget",
                "args": [],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "create_deal",
                "args": [
                    {
                        "type": "txn",
                        "name": "deposit_payment"
                    },
                    {
                        "type": "txn",
                        "name": "collateral_payment"
                    },
                    {
                        "type": "uint64",
                        "name": "key_index"
                    },
                    {
                        "type": "uint64",
                        "name": "your_dep_amount"
                    },
                    {
                        "type": "uint64",
                        "name": "your_dep_asset"
                    },
                    {
                        "type": "uint64",
                        "name": "your_col_amount"
                    },
                    {
                        "type": "uint64",
                        "name": "your_col_asset"
                    },
                    {
                        "type": "account",
                        "name": "their_address"
                    },
                    {
                        "type": "uint64",
                        "name": "their_key_index"
                    },
                    {
                        "type": "uint64",
                        "name": "their_dep_amount"
                    },
                    {
                        "type": "uint64",
                        "name": "their_dep_asset"
                    },
                    {
                        "type": "uint64",
                        "name": "their_col_amount"
                    },
                    {
                        "type": "uint64",
                        "name": "their_col_asset"
                    },
                    {
                        "type": "string",
                        "name": "deal_note"
                    },
                    {
                        "type": "txn",
                        "name": "registration_payment"
                    }
                ],
                "returns": {
                    "type": "uint64"
                }
            },
            {
                "name": "attach_data",
                "args": [
                    {
                        "type": "byte[33]",
                        "name": "deal_key"
                    },
                    {
                        "type": "uint64",
                        "name": "key_index"
                    },
                    {
                        "type": "uint64",
                        "name": "data_length"
                    },
                    {
                        "type": "uint64",
                        "name": "data_index"
                    },
                    {
                        "type": "string",
                        "name": "data"
                    }
                ],
                "returns": {
                    "type": "uint64"
                }
            },
            {
                "name": "match_deal",
                "args": [
                    {
                        "type": "txn",
                        "name": "deposit_payment"
                    },
                    {
                        "type": "txn",
                        "name": "collateral_payment"
                    },
                    {
                        "type": "byte[33]",
                        "name": "deal_key"
                    },
                    {
                        "type": "uint64",
                        "name": "key_index"
                    },
                    {
                        "type": "account",
                        "name": "their_address"
                    },
                    {
                        "type": "uint64",
                        "name": "their_key_index"
                    }
                ],
                "returns": {
                    "type": "byte[2]"
                }
            },
            {
                "name": "recall_deal",
                "args": [
                    {
                        "type": "byte[33]",
                        "name": "deal_key"
                    },
                    {
                        "type": "uint64",
                        "name": "key_index"
                    },
                    {
                        "type": "account",
                        "name": "their_address"
                    },
                    {
                        "type": "uint64",
                        "name": "their_key_index"
                    }
                ],
                "returns": {
                    "type": "string"
                }
            },
            {
                "name": "reject_deal",
                "args": [
                    {
                        "type": "byte[33]",
                        "name": "deal_key"
                    },
                    {
                        "type": "uint64",
                        "name": "key_index"
                    },
                    {
                        "type": "account",
                        "name": "their_address"
                    },
                    {
                        "type": "uint64",
                        "name": "their_key_index"
                    }
                ],
                "returns": {
                    "type": "string"
                }
            },
            {
                "name": "adjust_disbursement",
                "args": [
                    {
                        "type": "byte[33]",
                        "name": "deal_key"
                    },
                    {
                        "type": "uint64",
                        "name": "key_index"
                    },
                    {
                        "type": "account",
                        "name": "their_address"
                    },
                    {
                        "type": "uint64",
                        "name": "their_key_index"
                    },
                    {
                        "type": "uint64",
                        "name": "first_acc_forward_amount"
                    },
                    {
                        "type": "uint64",
                        "name": "second_acc_forward_amount"
                    }
                ],
                "returns": {
                    "type": "string"
                }
            },
            {
                "name": "agree_disbursement",
                "args": [
                    {
                        "type": "byte[33]",
                        "name": "deal_key"
                    },
                    {
                        "type": "uint64",
                        "name": "key_index"
                    },
                    {
                        "type": "account",
                        "name": "their_address"
                    },
                    {
                        "type": "uint64",
                        "name": "their_key_index"
                    }
                ],
                "returns": {
                    "type": "string"
                }
            }
        ],
        "networks": {},
        "desc": "Peer-to-peer escrow agreements powered by Algorand"
    },
    "bare_call_config": {
        "delete_application": "CALL",
        "no_op": "CREATE",
        "update_application": "CALL"
    }
}